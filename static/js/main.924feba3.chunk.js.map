{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","className","value","onChange","e","target","type","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","htmlFor","filter","el","TodoList","filteredTodos","App","useState","setInpuText","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.924feba3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst  Form = ( { setInputText, todos, setTodos, inputText, setStatus } ) => {\r\n\r\n    const inputTexHandler = (e) => {\r\n        setInputText(e.target.value);\r\n    };\r\n\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault();\r\n        setTodos([\r\n            ...todos,\r\n            {text: inputText, completed: false, id:Math.random() * 1000 },\r\n        ]);\r\n        setInputText('');\r\n    };\r\n\r\n    const statusHandler =(e) => {\r\n        setStatus(e.target.value);\r\n    };\r\n\r\n    return ( \r\n\r\n        <form>\r\n            <div className='input-container'>\r\n                <input value={inputText} onChange={inputTexHandler} type=\"text\" className='todo-input' />\r\n                <button onClick={submitTodoHandler} className='todo-button' type='submit' >\r\n                    <i className='fas fa-plus-square'></i>\r\n                </button>\r\n            </div>\r\n            <div className='select'>\r\n                <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                    <option value=\"uncompleted\">Uncompleted</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n     );\r\n}\r\n \r\nexport default  Form;","import React from 'react';\r\n\r\nimport './checkMarkIcon.css';\r\nimport './trashIcon.css';\r\n\r\nconst Todo = ({ setTodos, todos, todo, text }) => {\r\n\r\n    // Events\r\n\r\n    const completeHandler = () => {\r\n        setTodos(todos.map( (item) => {\r\n            if(item.id === todo.id) {\r\n                return {\r\n                    ...item,\r\n                    completed: !item.completed\r\n                }\r\n            }\r\n            return item;\r\n        }))\r\n    };\r\n\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter( (el) => el.id !== todo.id));\r\n    };\r\n\r\n\r\n    return ( \r\n\r\n        <div className='todo'>\r\n\r\n            {/* <button onClick={completeHandler} className='complete-btn'>\r\n                <i className='fas fa-check'></i>\r\n            </button> \r\n\r\n             <li className={`todo-item ${ todo.completed ? 'completed' : '' } `}>\r\n                {text}\r\n            </li> */}\r\n\r\n\r\n            <section className='todo-checkbox-contain'>\r\n                <input onClick={completeHandler} id={todo.id} className='complete-btn, todo-checkbox' type='checkbox'/>\r\n\r\n                <label htmlFor={todo.id} className='todo-checkbox-label'>\r\n                    <span className='todo-checkbox-span'>\r\n                    <div className='check-mark draw'></div>\r\n\r\n                    </span>\r\n                      <li className={`todo-item ${ todo.completed ? 'completed' : '' } `}>\r\n                         {text}\r\n                      </li>\r\n                </label>\r\n            </section>\r\n\r\n\r\n            {/* <section onClick={completeHandler} className='todo-checkbox-contain'>\r\n                <input id='one' className='todo-checkbox' type='checkbox'/>\r\n                <label htmlFor='one' className='todo-checkbox-label'>\r\n                    <span className='todo-checkbox-span, complete-btn'></span>\r\n                      <li className={`todo-item ${ todo.completed ? 'completed' : '' } `}>\r\n                         {text}\r\n                      </li>\r\n                </label>\r\n            </section> */}\r\n\r\n            {/* <section>\r\n                <input id='one' type='checkbox' />\r\n                <label for='one'>\r\n                    <span></span>\r\n                    Off with your head\r\n                    <ins><i>Off with your head</i></ins>\r\n                </label>\r\n            </section> */}\r\n            \r\n            <button onClick={deleteHandler} className='trash-btn'>\r\n                {/* <i className='fas fa-trash'></i> */}\r\n                <span className='trash'>\r\n                    <span></span>\r\n                    <i></i>\r\n                </span>\r\n            </button>\r\n            \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Todo;\r\n","import React from 'react';\r\n\r\n//import components\r\nimport Todo from './Todo';\r\n\r\nconst TodoList = ({ filteredTodos, todos, setTodos }) => {\r\n    return ( \r\n\r\n        <div className='todo-container'>\r\n            <ul className='todo-list'>\r\n                {filteredTodos.map((todo) => (\r\n                    <Todo\r\n                        setTodos={setTodos}\r\n                        todos={todos}\r\n                        todo={todo}\r\n                        text={todo.text}\r\n                        key={todo.id}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default TodoList","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\n\r\n//* import components\r\nimport Form from './components/Form';\r\nimport TodoList from './components/TodoList';\r\n\r\nfunction App() {\r\n\r\n  // State Stuff\r\n\r\n  const [inputText, setInpuText] = useState('');\r\n  const [todos, setTodos] = useState([]);\r\n  const [status, setStatus] = useState('all');\r\n  const [filteredTodos, setFilteredTodos] = useState([]);\r\n\r\n  // Run Once when the app starts\r\n\r\n  useEffect(() => {\r\n    getLocalTodos();\r\n  }, [] );\r\n\r\n  // Use Effect\r\n\r\n  useEffect(() => {\r\n    const filterHandler = () => {\r\n      switch (status) {\r\n        case 'completed':\r\n          setFilteredTodos(todos.filter(todo => todo.completed === true));\r\n          break;\r\n        \r\n        case 'uncompleted':\r\n          setFilteredTodos(todos.filter(todo => todo.completed === false ));\r\n          break;\r\n\r\n        default:\r\n          setFilteredTodos(todos);\r\n          break;\r\n      }\r\n    };\r\n\r\n    filterHandler();\r\n    saveLocalTodos();\r\n  }, [todos, status] );\r\n\r\n  // Save to Local\r\n\r\n  const saveLocalTodos = () => {\r\n    localStorage.setItem('todos', JSON.stringify(todos) );\r\n  };\r\n\r\n  const getLocalTodos = () => {\r\n    if (localStorage.getItem('todos') === null) {\r\n      localStorage.setItem('todos', JSON.stringify([]));\r\n    } else {\r\n      let todoLocal = JSON.parse(localStorage.getItem('todos'));\r\n      setTodos(todoLocal);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <h1>Sheron's TODO List</h1>\r\n      </header>\r\n      <Form \r\n        inputText={inputText}\r\n        todos={todos}\r\n        setTodos={setTodos}\r\n        setInputText={setInpuText}\r\n        setStatus={setStatus}\r\n      />\r\n      <TodoList \r\n        filteredTodos={filteredTodos}  \r\n        setTodos={setTodos}\r\n        todos={todos}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}